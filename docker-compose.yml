version: "3"
services:
  api:
    stdin_open: true
    tty: true
    build:
      context: ./api
      args:
        USERID: ${UID}
    ports:
      - "8000:8000"
    volumes:
      - ./:/opt/app

  web:
    stdin_open: true
    tty: true
    image: nginx:mainline-alpine
    ports:
      - "8080:80"
    volumes:
      - ./web:/usr/share/nginx/html

  scorer:
    stdin_open: true
    tty: true
    build:
      context: ./scorer
      args:
        USERID: ${UID}
    volumes:
      - ./:/opt/app

  ws:
    stdin_open: true
    tty: true
    build:
      context: ./ws
      args:
        USERID: ${UID}
    ports:
      - "8008:8008"
    volumes:
      - ./:/opt/app

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
    - "2181"

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "score:1:1,websocket:1:1"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
    - zookeeper
    - kafka
    ports:
    - "9000:9000"
    expose:
     - "9000"
    environment:
      KAFKA_BROKERCONNECT: //kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
